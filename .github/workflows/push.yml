name: build

on:
  push:
    branches:
      - main
      - master

env:
  AWS_ACCOUNT_ID: "968005369378"
  AWS_REGION: "ap-northeast-2"
  AWS_ROLE_NAME: "next-auth-example"

  IMAGE_NAME: nalbam/next-auth-example
  PLATFORM: linux/amd64,linux/arm64

# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: write   # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump Version 🏷️
        id: bump
        uses: opspresso/action-builder@master
        with:
          args: --version

      - name: Release Version 🚀
        uses: opspresso/action-builder@master
        with:
          args: --release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ steps.bump.outputs.version }}

      - name: Setup Node 📦
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup QEMU 📦
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx 📦
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub 🔑
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Metadata 📦
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{raw}},value=${{ steps.bump.outputs.version }}

      - name: Build and push 🐳
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: ${{ env.PLATFORM }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Configure AWS Credentials 🔑
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_NAME }}"
          role-session-name: github-actions-ci-bot
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR 🔑
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push image to Amazon ECR
        env:
          IMAGE_URI: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}
          VERSION: ${{ steps.meta.outputs.version }}
        run: |
          docker buildx imagetools create \
            --tag ${{ env.IMAGE_URI }}:${{ env.VERSION }} \
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
