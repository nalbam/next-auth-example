name: build

on:
  push:
    branches:
      - main
      - master

env:
  AWS_REGION: ap-northeast-2
  AWS_ROLE_ARN: "arn:aws:iam::968005369378:role/next-auth-example"

  PLATFORM: linux/amd64 # ,linux/arm64

  IMAGE_URI: "968005369378.dkr.ecr.ap-northeast-2.amazonaws.com/nalbam/next-auth-example"

  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
  AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
  AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
  AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}

# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: write   # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Bump Version 🏷️
        id: bump
        uses: opspresso/action-builder@master
        with:
          args: --version

      - name: Release Version 🚀
        uses: opspresso/action-builder@master
        with:
          args: --release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ steps.bump.outputs.version }}

      - name: Set up QEMU 🐳
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx 🐳
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials 🔑
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: github-actions-ci-bot
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR 🔑
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push 🐳
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: "${{ env.IMAGE_URI }}:latest"
          platforms: ${{ env.PLATFORM }}
          outputs: type=docker  # Lambda가 지원하는 Docker Image Manifest V2 형식 강제 적용

      - name: Set up environment variables 📝
        run: |
          echo "AUTH_SECRET=${AUTH_SECRET}" >> .env
          echo "AUTH_GITHUB_ID=${AUTH_GITHUB_ID}" >> .env
          echo "AUTH_GITHUB_SECRET=${AUTH_GITHUB_SECRET}" >> .env
          echo "AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}" >> .env
          echo "AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}" >> .env

      # - name: Deploy to AWS Lambda 🚀
      #   run: npx serverless deploy --region ${{ env.AWS_REGION }}
